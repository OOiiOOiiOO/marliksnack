اولین مرحله
============


نوشتن کلاس های مورد نیاز
---------------------------------------


در این مرحله ما به ترتیب از چندین کلاس برای تعریف ماهیت های موجود در بازی استفاده میکنیم

کل کلاس های ما به شرح زیر است:
::

    class club (object)


    class snak(object)







.. raw:: html

    <style> .red {color:#e80000; font-weight:bold; font-size:18px} </style>
    <style> .blue {color:#48d7ee; font-weight:bold; font-size:18px} </style>
    <style> .or {color:#f8ab2c; font-weight:bold; font-size:18px} </style>

.. role:: red
.. role:: blue
.. role:: or


*****************************
:red:`1. class club (object)`
*****************************
برای ایجاد یک مربع به عنوان پاداش و خورده شدن توسط مار که خود شامل چندین متد
و فاکنشکن برای انجام کارهایی به شرح زیر است


:or:`def __init__:` 

این تابع که کار شناسایی کلی ویژگی های کلاس و همچنین ایجاد پارامتر های مختلف را بر عهده دارن
خود شامل جندین پارامتر به شرح زیر است :

:blue:`* dirnx:`

جهت تعیین محل قرار گیری مربع امتیاز از جهت ایکس محور با مقدار پیشفرض 0

:blue:`* dirny:`

جهت تعیین محل قرار گیری مربع امتیاز از جهت ایکس محور  با مقدار پیشفرض 1

:blue:`* color`

که از پیش تعیین میکنیمR,G,B برای تعیین رنگ دلخواه مربع که شامل مقادیر 

:or:`def move(dirnx, dirny):`

همان طور که از اسمش  مشخصه وضیفه حرکت دادن رندومایز شده جایزه یا همان مربع را برعهده دارد
است به جهت تعیین محل قرار گیری مربع در درون زمین dirnx , dirny که خود شامل دو ماهیت 

:or:`def draw(sourface, eyes=False):`

به جهت کشیدن هر مربع درون زمین ایجاد شده که دو پارامتر به ان داده ایم :

:blue:`* sourface`:

که همان منطقه زمین بازی است که که در ادامه نحوه تشکیل آن را شرح میدهم

:blue:`* eyes = False`:

مارِ بازی ما دارای یک مربع اصلی است که سر اوست در حقیقت محل قرار گیری چشمان 
بگذارم که تفاوت این مربع به خصوص با تمامی مربع های تشکل شده eyes  اوست برای همین من تصمیم گرفتم که اسم اون مربع به خصوص را 
چه امتیاز ها و چه بدن مار در کل کد مشخص باشد و دلیل نقض این ابجکت به خصوص برای جلوگیری از تشکیل مربع 
امتیاز شبیه مربع سر مار است !




:red:`2. class snak (object)`
#############################

:or:`def __init__:` 

همانند کلاس قبلی این تابع نیز کار شناسایی کلی ویژگی های کلاس و همچنین ایجاد پارامتر های مختلف را بر عهده دارد
خود شامل جندین پارامتر به شرح زیر است 

:blue:`* color:`

به جهت تعیین رنگ مار از این پارامتر استفاده میکنیم

:blue:`* pos:`

برای تعیین شکل قرار گیری مار در صحفه از این پارامتر در توابع استفاده میکنم


:or:`def move:`

از این تابع به جهت تعریف نحوه حرکت مار در جهت های مختلف استفاده میکنیم این تابع دارای پارامتر خاصی نیست و خود یه موجودیت مستقل است

:or:`def reset:`

به جهت تعریف دوباره مار پس از شکت و برخورد

:or:`def addCube:`

از این تابع برای تعریف اضافه شدن طول بدن مار بعد از خوردن مربع های جایزه استفاده میکنم

:or:`def draw:`

به جهت کشبدن مار در صفحه بازی استفاده میشود club این تابع نیز همانند تابع هم نام خود در کلاس 



توجه
=====
توسط پایتون نادیده گرفته میشود تا بعد از پایان تعریف های اولیه به کد نویسی هر بخش بپردازیم pass تمامی مراحل بالا با گذاشتن کلمه کلیدی 